name: WordPress Vulnerability Scanner
description: A GitHub action that can be used to run vulnerability checks using the 10up WP-CLI Vulnerability Scanner
author: jazzsequence
branding:
  icon: crosshair
  color: yellow
inputs:
  api-provider:
    description: The API provider to use for the vulnerability check. Valid options are `patchstack`, `wpscan` and `wordfence`. Defaults to `wordfence`.
    required: false
    default: wordfence
  api-token:
    description: The API token to use for the vulnerability check. Defaults to `''`. Patchstack and WPScan both require an API token. The API token is optional for Wordfence.
    required: false
    default: ''
  type:
    description: The type of vulnerability check to run. Valid options are `plugin`, `theme` and `core`. Defaults to `plugin`.
    required: false
    default: plugin
  name:
    description: The name of the plugin or theme to check. Defaults to the name of the repository.
    required: false
    default: ${{ github.repository }}
runs:
  using: composite
  steps:
    - uses: shogo82148/actions-setup-mysql@v1
      with:
        distribution: mariadb
        mysql-version: 10.5
        root-password: root
    - name: Install Extras
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install subversion
    - name: Install WordPress Test Suite
      shell: bash
      run: |
        echo "Installing WP Test Suite so we can use it for vulnerability scanning..."
        bash bin/install-wp-tests.sh wordpress root root 127.0.0.1 latest
    - name: Install WP-CLI
      shell: bash
      run: |
        echo "Installing WP-CLI..."
        bash bin/functions.sh install_wp_cli
    - name: Set up WordPress
      shell: bash
      run: |
        echo "Setting up WordPress..."
        bash bin/functions.sh install_wp
    - name: Set up package & vulnerability scanner
      shell: bash
      run: |
        echo "Setting up your package to scan & the vulnerability scanner..."
        bash bin/functions.sh setup_vuln_scanner
    - name: Scan for vulnerabilities
      shell: bash
      run: bash bin/functions.sh run_scan
