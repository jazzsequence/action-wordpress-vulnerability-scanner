name: WordPress Vulnerability Scanner
description: A GitHub action that can be used to run vulnerability checks using the 10up WP-CLI Vulnerability Scanner
author: jazzsequence
branding:
  icon: crosshair
  color: yellow
inputs:
  api-provider:
    description: The API provider to use for the vulnerability check. Valid options are `patchstack`, `wpscan` and `wordfence`. Defaults to `wordfence`.
    required: false
    default: wordfence
  api-token:
    description: The API token to use for the vulnerability check. Defaults to `''`. Patchstack and WPScan both require an API token. The API token is optional for Wordfence.
    required: false
    default: ''
  type:
    description: The type of vulnerability check to run. Valid options are `plugin`, `theme` and `core`. Defaults to `plugin`.
    required: false
    default: plugin
  name:
    description: The name of the plugin or theme to check. Defaults to the name of the repository.
    required: false
    default: ${{ github.repository }}
runs:
  using: composite
  steps:
    - uses: shogo82148/actions-setup-mysql@v1
      with:
        distribution: mariadb
        mysql-version: 10.5
        root-password: root
    - name: Install Extras
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install subversion
    - name: Install WordPress Test Suite
      shell: bash
      run: |
        echo "Installing WP Test Suite so we can use it for vulnerability scanning..."
        bash bin/install-wp-tests.sh wordpress root root 127.0.0.1 latest
    - name: Install WP-CLI
      shell: bash
      run: |
        echo "Installing WP-CLI..."
        bash bin/functions.sh install_wp_cli
    - name: Set up WordPress
      shell: bash
      run: |
        echo "Setting up WordPress..."
        bash bin/functions.sh install_wp
    - name: Set up package & vulnerability scanner
      shell: bash
      run: |
        echo "Setting up your package to scan & the vulnerability scanner..."
        package_install_directory="/tmp/wordpress/wp-content/${{ inputs.type }}s/${{ inputs.name }}"
        cd /tmp/wordpress
        if [[ ${{ inputs.type }} == "plugin" ]]; then
          wp plugin delete hello
          wp plugin delete akismet
        elif [[ ${{ inputs.type }} == "theme" ]]; then
          rm -rf wp-content/themes/twenty*
        fi
        rm wp-content/db.php
        mkdir -p ${package_install_directory}
        echo "Checking if ${{ inputs.name }} exists in ${package_install_directory}..."
        if [[ -d ${package_install_directory} ]]; then
          echo "✅ Directory exists!"
        else
          echo "❌ Directory does not exist!"
          exit 1
        fi
        echo "Copying ${{ inputs.name }} from ${GITHUB_WORKSPACE} to ${package_install_directory}"
        cp -r ${GITHUB_WORKSPACE}/${{ inputs.name }}/* ${package_install_directory}
        wp ${{ inputs.type }} list
        wp ${{ inputs.type }} activate "${{ inputs.name }}"
        wp package install 10up/wpcli-vulnerability-scanner:dev-trunk
        wp config set VULN_API_PROVIDER ${{ inputs.api-provider }}
        wp config set VULN_API_TOKEN "${{ inputs.api-token }}"
    - name: Scan for vulnerabilities
      shell: bash
      run: |
        package_name=$(basename "${{ github.workspace }}")
        cd /tmp/wordpress
        wp vuln ${{ inputs.type }}-status
        if [[ $(wp vuln ${{ inputs.type }}-status) =~ "No vulnerabilities reported for this version of ${{ inputs.name }}" ]]; then
          echo "✨ No vulnerabilities found"
          exit 0
        else
          echo "❌ Vulnerabilities found"
          exit 1
        fi